plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id("com.google.devtools.ksp") version "1.7.20-1.0.7"
}

android {
    namespace 'com.trianglz.mimar'
    compileSdk 33

    defaultConfig {
        minSdk 24
        targetSdk 33
        rootProject.ext.config.each { p ->
            if (p.key != 'VERSION_CODE' && p.key != 'VERSION_NAME' && p.key != 'APPLICATION_ID') {
                buildConfigField 'String', p.key, p.value
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    compileOptions {
        // Enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        dataBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    def envConfig
    flavorDimensions "default"
    productFlavors {
        dev {
            envConfig = loadPropertiesFromFile("config/dev.properties")
            applicationId envConfig.getProperty("APPLICATION_ID").replace("\"", "")
            versionCode envConfig.VERSION_CODE.replace("\"", "").toInteger()
            versionName envConfig.VERSION_NAME.replace("\"", "")
            resValue "string", "app_name", "Mimar_dev"
        }
        stg {
            envConfig = loadPropertiesFromFile("config/stg.properties")
            applicationId envConfig.getProperty("APPLICATION_ID").replace("\"", "")
            versionCode envConfig.VERSION_CODE.replace("\"", "").toInteger()
            versionName envConfig.VERSION_NAME.replace("\"", "")
            resValue "string", "app_name", "Mimar_stg"
        }

        demo {
            envConfig = loadPropertiesFromFile("config/demo.properties")
            applicationId envConfig.getProperty("APPLICATION_ID").replace("\"", "")
            versionCode envConfig.VERSION_CODE.replace("\"", "").toInteger()
            versionName envConfig.VERSION_NAME.replace("\"", "")
            resValue "string", "app_name", "Mimar_demo"
        }

        prod {
            envConfig = loadPropertiesFromFile("config/prod.properties")
            applicationId envConfig.getProperty("APPLICATION_ID").replace("\"", "")
            versionCode envConfig.VERSION_CODE.replace("\"", "").toInteger()
            versionName envConfig.VERSION_NAME.replace("\"", "")
            resValue "string", "app_name", "Mimar"
        }
    }
    signingConfigs {
        release {
            storeFile file("../signing/mimar_key.jks")
            storePassword "TrianglZ"
            keyAlias "MimarKeyAlias"
            keyPassword "TrianglZ"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        kotlin.sourceSets {
            def flavor = variant.productFlavors[0].name
            println("flavors_test build/generated/ksp/${flavor}Debug/kotlin")
            debug {
                getByName(flavor) {
                    kotlin.srcDir("build/generated/ksp/${flavor}Debug/kotlin")
                }
            }
            release {
                getByName(flavor) {
                    kotlin.srcDir("build/generated/ksp/${flavor}Release/kotlin")
                }
            }
        }
    }
    sourceSets {
        main {
            res.srcDirs =
                [
                    'src/main/res/drawablefiles/countries',
                    'src/main/res',
                ]
        }
    }

}

dependencies {

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'com.trianglz.core:core:1.0.6'
    implementation 'com.trianglz.core:core-compose:1.0.7'
    //region Hilt
    implementation 'com.google.dagger:hilt-android:2.44'
    kapt 'com.google.dagger:hilt-compiler:2.44'
    //endregion

    //region Data Store
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation "androidx.datastore:datastore-core:1.0.0"
    //endregion

    //region Navigation with Destinations
    implementation 'io.github.raamcosta.compose-destinations:core:1.7.25-beta'
    implementation 'io.github.raamcosta.compose-destinations:animations-core:1.7.25-beta'
    ksp 'io.github.raamcosta.compose-destinations:ksp:1.7.25-beta'
    //endregion

    // Import the landscapist BOM
    implementation "com.github.skydoves:landscapist-bom:2.1.0"

    // Import landscapist libraries
    implementation "com.github.skydoves:landscapist-coil" // fresco or coil
    implementation "com.github.skydoves:landscapist-placeholder"
    implementation "com.github.skydoves:landscapist-palette"
    implementation "com.github.skydoves:landscapist-transformation"
    implementation "com.github.skydoves:landscapist-animation"
    //endregion

    //region Rating
    implementation 'com.github.a914-gowtham:compose-ratingbar:1.2.4'
    //endregion

    //region Date dialog
    implementation "io.github.vanpra.compose-material-dialogs:datetime:0.8.1-rc"
    //endregion

    //region Map
    implementation "com.google.android.libraries.maps:maps:3.1.0-beta"
    implementation "com.google.maps.android:maps-v3-ktx:2.2.0"
    implementation 'com.google.android.libraries.places:places:3.0.0'
    //endregion

    //region pager
    implementation "com.google.accompanist:accompanist-pager:0.25.1"
    implementation "com.google.accompanist:accompanist-pager-indicators:0.19.0"
    //endregion

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'
    implementation 'com.kizitonwose.calendar:compose:2.2.0'
    implementation 'com.neovisionaries:nv-websocket-client:2.14'

    implementation fileTree(dir: "libs", include: ["*.aar"])

    //region Rating
    implementation 'com.github.a914-gowtham:compose-ratingbar:1.2.5'
    //endregion
    implementation 'org.java-websocket:Java-WebSocket:1.5.2'
}